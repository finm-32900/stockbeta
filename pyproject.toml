[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "stockbeta"
dynamic = ["version"]
description = 'Example Python package for teaching/learning'
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = ["Example", "Teaching", "Finance"]
authors = [
  { name = "Jeremiah Bejarano", email = "jbejarano@uchicago.edu" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "pandas-datareader>=0.10.0",
  "pandas>=1.0.0",
  "fastparquet",
  "pyarrow",
  "numpy",
  "yfinance",
  "click",
]

[project.scripts]
stockbeta = "stockbeta.cli:main"

[project.urls]
Documentation = "https://github.com/finm-32900/stockbeta-example#readme"
Issues = "https://github.com/finm-32900/stockbeta-example/issues"
Source = "https://github.com/finm-32900/stockbeta-example"

[tool.hatch.version]
path = "src/stockbeta/__about__.py"

[tool.hatch.envs.types]
dependencies = [
  "mypy>=1.0.0",
  "pandas-stubs",
  "types-setuptools",
  "types-openpyxl",
  "types-python-dateutil"
]

[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/ tests/}"

[tool.coverage.run]
source_pkgs = ["stockbeta", "tests"]
branch = true
parallel = true
omit = [
  "src/stockbeta/__about__.py",
]

[tool.coverage.paths]
stockbeta = ["src/stockbeta", "*/stockbeta/src/stockbeta"]
tests = ["tests", "*/stockbeta/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.hatch.build]
packages = ["src/stockbeta"]
include = [
    "src/stockbeta/data/**"
]

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning:pandas_datareader.*:",
    "ignore::FutureWarning"
]

[tool.hatch.envs.test]
dependencies = [
  "pytest>=7.0",
  "pytest-cov",
  "setuptools",
  "wheel",
  "pandas",
  "pandas-datareader",
  "numpy",
  "importlib_resources>=5.0.0",
  "pyarrow",
  "fastparquet"
]

[tool.hatch.envs.test.scripts]
test = "pytest {args:tests}"

[tool.mypy]
ignore_missing_imports = true
check_untyped_defs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
